#!/bin/sh


_repo_path() {
    # expand ~ to absolute path
    eval repo=`git config track.repo`
    echo $repo
}



_abs() {
    echo -n "$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
}



_fallback_home() {
    echo "$( echo -n $1 | sed -e s#^$HOME#\~# )"
}


_md5() {
    file="$( _fallback_home $1 )"
    echo -n $file | md5sum | awk '{print $1}'
}



_stat() {
    stat="$( stat -c "%A %U %G" $1 | sed -e s#$USER#\~#g )"
    echo -n $stat
}



_import_file() {
    file=$1
    [ ! -f $file ] && return

    hash="$( _md5 $file )"
    stat="$( _stat $file )"
    file="$( _fallback_home $1 )"

    [ ! -d "db" ] && mkdir 'db'
    eval cp $file db/$hash

    cat list | grep -v $hash > list.tmp
    mv list.tmp list

    echo "$hash $stat $file" >> list

    echo -n $hash
}



add() {
    CWD=`pwd`
    cd $( _repo_path )
    for file in $@; do
        hash="$( _import_file $CWD/$file )"
        git add db/$hash
    done
    git add list
}



rm() {
    echo 'Not implemented'
}



check() {
    cd $( _repo_path )
    cat list | while read line || [ -n "$line" ]
    do
        set -- $line
        hash=$1;eval file=$5
        if [ ! -f db/$hash ]; then
            git checkout db/$hash
        fi
        git diff db/$hash $file
    done
}



log() {
    cd $( _repo_path )
    git log $@
}



status() {
    cd $( _repo_path )
    git status
}



import() {
    cd $( _repo_path )
    cat list | while read line || [ -n "$line" ]; do
        set -- $line
        md5="$( _import_file $5 )"
        git add db/$md5
    done
    git add list
}



_export() {
    cd $( _repo_path )
    cat list | while read line || [ -n "$line" ]; do
        set -- $line
        hash=$1
        file=$5
        mv db/$hash $file
    done
    git checkout -f
}



sdiff() {
    file="$( _abs $@ )"
    hash="$( _md5 $@ )"
    cd $( _repo_path )
    git diff db/$hash $file
}



diff() {
    hash="$( _md5 $@ )"
    cd $( _repo_path )
    echo $@ $hash $last
    git diff db/$hash
}



commit() {
    cd $( _repo_path )
    git commit $@
}



main() {
    if [ -z "$1" ]; then
        set -- status
    fi
    if [ "$1" = "export" ]; then
        shift
        _export $@
    else
        cmd=$1; shift
        $cmd $@
    fi
}



main $@
