#!/bin/sh


_repo_path() {
    # expand ~ to absolute path
    eval repo=`git config track.repo`
    echo $repo
}



_abs() {
    echo -n "$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
}



_fallback_home() {
    echo "$( echo -n $1 | sed -e s#^$HOME#\~# )"
}


_md5() {
    echo -n $1 | md5sum | awk '{print $1}'
}



_stat() {
    stat="$( stat -c "%A %U %G" $1 | sed -e s#$USER#\~#g )"
    echo -n $stat
}



_import_file() {
    [ ! -f "$1" ] && return
    [ ! -d "$( _repo_path )/db" ] && mkdir 'db'
    file=$1
    hash="$( _md5 $( _fallback_home $file ) )"

    cp $file $( _repo_path )/db/$hash

    echo -n $hash
}



add() {
    CWD=`pwd`
    cd $( _repo_path )
    for file in $@; do
        hash="$( _import_file $CWD/$file )"
        git add db/$hash

        cat list | grep -v $hash > list.tmp
        mv list.tmp list

        stat="$( _stat $CWD/$file )"
        echo "$hash $stat $( _fallback_home $CWD/$file )" >> list
    done
    git add list
}



rm() {
    echo 'Not implemented'
}



check() {
    cd $( _repo_path )
    cat list | while read line || [ -n "$line" ]
    do
        set -- $line
        hash=$1;eval file=$5
        if [ ! -f db/$hash ]; then
            git checkout db/$hash
        fi
        git diff db/$hash $file
    done
}



log() {
    cd $( _repo_path )
    git log $@
}



status() {
    cd $( _repo_path )
    git status
}



import() {
    cd $( _repo_path )
    cat list | while read line || [ -n "$line" ]; do
        set -- $line
        # expand ~ to absolute path
        eval hash=$( _import_file $5 )
    done
}



_export() {
    cd $( _repo_path )
    cat list | while read line || [ -n "$line" ]; do
        set -- $line
        hash=$1
        file=$5
        mv db/$hash $file
    done
    git checkout -f
}



sdiff() {
    file="$( _abs $1 )"
    hash="$( _md5 $( _fallback_home $file ) )"
    cd $( _repo_path )
    git diff db/$hash $file
}



diff() {
    hash="$( _md5 $( _fallback_home $( _abs $1 ) ) )"
    cd $( _repo_path )
    git diff db/$hash
}



commit() {
    cd $( _repo_path )
    git commit $@
}



main() {
    if [ -z "$1" ]; then
        set -- status
    fi
    if [ "$1" = "export" ]; then
        shift
        _export $@
    else
        cmd=$1; shift
        $cmd $@
    fi
}



main $@
